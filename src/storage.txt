theWords.js

const model = require('@tensorflow-models/toxicity');
const { SlashCommandBuilder } = require('@discordjs/builders');
const { REST } = require('@discordjs/rest');
const { Routes } = require('discord-api-types/v9');
const { clientId, guildId, token } = require('../config.json');
const listofsusppl = [];
const listofverysusppl = [];
const listofbadppl = [];
let baddie = false;
const theWords = ['hoax','anti-vax','deep state','democrats','communists','all a ploy']
const infoList = ['https://www.cdc.gov/coronavirus/2019-ncov/index.html']
require('@tensorflow-models/tfjs');
// The minimum prediction confidence.
const threshold = 0.9;

// Load the model. Users optionally pass in a threshold and an array of
// labels to include.
toxicity.load(threshold).then(model => {
  const sentences = msg.content;//takes in discord texts as input

  model.classify(sentences).then(predictions => {
    // `predictions` is an array of objects, one for each prediction head,
    // that contains the raw probabilities for each input along with the
    // final prediction in `match` (either `true` or `false`).
    // If neither prediction exceeds the threshold, `match` is `null`.
    if (match !== null) {
      baddie = true;
    }
  });
});

////////
theWords.js
try {
      suspect = await usrOnNotice();
    if (listofsusppl.includes(suspect)) {//strike 2
      listofsusppl.pop(suspect);
      listofverysusppl.push(suspect);
      message.reply("this is a warning. You have been put on notice. Other members can type in !discretion within 30 seconds in order to take matters into other consideration.");

    } else if (listofverysusppl.includes(suspect)) {//strike 3 (kicks user out)
      listofverysusppl.pop(suspect);
      listofbadppl.push(suspect);
      suspect.kick();
    } else { // strike 1
      listofsusppl.push(suspect);
      msg.reply('your recent post may contain misinformation, which violates Discord platform policies. Please refrain from further discussion on the current subject. Inaccountability to cooperate otherwise may result in indefinite suspension. For any questions regarding the coronavirus and the vaccines pertaining to it, please visit:\n'+`${infoList[0]}`);
    }
  } catch(e) {
    console.log(e);
  }
  ////////////////////
discretion.js
   try {
                suggestor = await usrOnNotice();
                if (suggestor !== suspect && discretionFlag === true) {
                    if (listofsusppl.includes(suspect)) {//if innocent got strike 2
                        listofsusppl.pop(suspect);
                    } else if (listofverysusppl.includes(suspect)) {//strike 3 innocent
                    listofverysusppl.pop(suspect);
                    } 
                    listofsusppl.pop(suspect);
                    msg.reply("Thank you for informing about a misunderstanding.");
                } else {
                    msg.reply("you cannot bail yourself out");
            }
            
            } catch(error) {
                console.log(error);
            }